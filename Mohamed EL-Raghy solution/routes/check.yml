---
# This is a Swagger specification for a uptime monitoring API with users resource
swagger: '3.0'
info:
  title: uptime monitoring
  version: '1.0.0'

# Define the list of endpoints for check resource
paths:
  /api/checks:
    # Define the HTTP POST method to create a check
    post:
      summary: Create a new Check
      tags:
        - Checks
      parameters: 
      - name: Authorization   
        in: header
        description: Authorization token
        required: true
        type: string
        format: string
        default: Bearer XXXX 
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Check'
                
      responses:
        '201':
          description: Check Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Check Created
                  user: 
                    type: object
                             
        '422':
          description: Validation Error

        '400': 
          description: check Already Exists

    get:
      summary: Create a new Check
      tags:
        - Checks
      parameters:
      - in: query
        name: tags
        schema:
          type: string
        description: tag to group checks by tag
      - name: Authorization   
        in: header
        description: Authorization token
        required: true
        type: string
        format: string
        default: Bearer XXXX 
                
      responses:
        '200':
          description: Get All checks
          content:
            application/json:
              schema:
                type: object
                properties:
                  checks:
                    type: object
          '404':
            No Checks found...

  /api/checks/{checkId}:      
    get:
      summary: user login 
      tags:
        - Checks
      parameters:
        - in: path
          name: checkId
          description: The ID of the check to retrieve
          required: true
          schema:
            type: string
        - name: Authorization   
          in: header
          description: Authorization token
          required: true
          type: string
          format: string
          default: Bearer XXXX 
      responses:
        '200':
          description: Get check by ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  check:
                    type: object
        
        '404':
          description: No Check found...
        '400':
          description: Not valid ID
    
    put:
      summary: edit Check
      tags:
        - Checks
      parameters:
        - in: path
          name: checkId
          description: The ID of the check to retrieve
          required: true
          schema:
            type: string
        - name: Authorization   
          in: header
          description: Authorization token
          required: true
          type: string
          format: string
          default: Bearer XXXX
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Check'
      responses:
        '200':
          description: Edit check by ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  check:
                    type: object
        '404':
          description: No Check found...
        '400':
          description: Not valid ID

    delete:
      summary: Deletes a check by id
      tags:
        - Checks
      parameters:
        - in: path
          name: checkId
          description: The ID of the check to delete
          required: true
          schema:
            type: string
      responses:
        '204':
          description: check deleted
        '404':
          description: No Check found...
        '400':
          description: Not valid ID
        
# Define reusable components for schemas and security
components:
  schemas:
    Check:
      type: object
      properties:
        name:
          type: string
          example: Check LocalHost
        url:
          type: string
          example: localhost
        protocol:
          type: string
          example: http